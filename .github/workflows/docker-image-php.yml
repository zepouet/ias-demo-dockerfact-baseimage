name: Docker Image CI

  #  name: Build the Docker image
  #  working-directory: php/8.1/debian
  #  run: docker build . --file Dockerfile --tag baseartifacts.azurecr.io/php:8.1-latest

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Run workflow each time code is pushed to your repository and on a schedule.
  # The scheduled workflow runs every Thursday at 15:45 UTC.
  schedule:
    - cron: '45 15 * * 4'

env:
  DOTNET_VERSION: '3.1.404'

jobs:

  #=====================================================================================================================
  # PULL, VALIDATE then PUSH the images
  #=====================================================================================================================
  build-and-publish:
    name: Release Image
    runs-on: ubuntu-latest
    steps:
      #=======================================
      # CHECKOUT
      #=======================================
      - name: checkout
        uses: actions/checkout@v2
      - name: pull-check-push
        uses: azure/docker-login@v1
        with:
          login-server: baseartifacts.azurecr.io
          username: ${{ secrets.ACR_SECRET_ID }}
          password: ${{ secrets.ACR_SECRET_PWD }}
      - run: |
          bash .github/workflows/pull-check-push.sh

      #============================================
      # Run Trivy vulnerability scanner no severity
      #============================================
      - name: Run Trivy vulnerability scanner no severity
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'baseartifacts.azurecr.io/php:8.1-test'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results-nofail.sarif'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'UNKNOWN,LOW,MEDIUM'

      #=======================================
      # Run Trivy vulnerability scanner
      #=======================================
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'baseartifacts.azurecr.io/php:8.1-test'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'

      #=======================================
      # Store Security report
      #=======================================
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'
